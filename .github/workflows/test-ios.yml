name: iOS-test

on: 
  push:
    branches:
    - feature
  workflow_dispatch:

jobs:
  Build:
    name: Build App üõ†
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set Default Scheme
      run: |
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo $default | cat >default
          echo Using default scheme: $default
    
    - name: Set default Xcode 12.4
      run: |
        sudo xcode-select -s /Applications/Xcode_12.4.app
    
    - run: |
          gem which cocoapods
    - name: Installing pods
      run: |
         cd ${{github.workspace}}
         pod deintegrate
         ls
    
    - name: Folder for certificates and profiles
      run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          mkdir -p ~/Library/MobileDevice/Certificates/
  
    - name: Get Certifcate
      id: certfile
      uses: timheuer/base64-to-file@v1
      with:
         fileName: 'certificate.p12'
         encodedString: ${{ secrets.P12_XCODE }}
         
    - name: Copy Certificate
      run: mv ${{ steps.certFile.outputs.filePath }} ~/Library/MobileDevice/Certificates/certificate.p12
      
    - name: Get Profile
      id: profile
      uses: timheuer/base64-to-file@v1
      with:
         fileName: 'development.mobileprovision'
         encodedString: ${{ secrets.MOBILEPROVISION_XCODE }}
         
    - name: Copy Profile
      run: mv ${{ steps.profile.outputs.filePath }} ~/Library/MobileDevice/Provisioning\ Profiles/decodefile.mobileprovision
      
    - name: Install dependencies
      uses: actions/setup-python@v2
      with:
          python-version: 3.7
    - name: Install python dependencies
      run:  python -m pip install codemagic-cli-tools
      
    - name: Intialize Keychaiin with Certificate
      run: |
          keychain initialize
          keychain add-certificates --certificate ~/Library/MobileDevice/Certificates/certificate.p12 --certificate-password ${{ secrets.P12_PASSWORD }}

    - name: Building IPA
      run: |
          mkdir xarchive
          xcode-project use-profiles
          xcodebuild archive -workspace ToDo.xcodeproj/project.xcworkspace -scheme ToDo -configuration debug -archivePath ${{github.workspace}}/xarchive/xcode-sample.xcarchive
    
    - name: Export Archive
      run: |
          mkdir ipafiles
          xcodebuild -exportArchive -archivePath ${{github.workspace}}/xarchive/xcode-sample.xcarchive  -exportPath ${{github.workspace}}/ipafiles/iosapp  -exportOptionsPlist ${{github.workspace}}/ToDoUITests/export_options.plist
    - name: upload ipa
      uses: actions/upload-artifact@v2
      with:
         name: ToDo
         path: ${{github.workspace}}/ipafiles/iosapp/ToDo.ipa
  
  codeql:
    name: CodeQL üîÜ
    runs-on: ubuntu-latest
    needs: Build

    strategy:
      fail-fast: false
      matrix:
        language: [ 'python' ]
    steps:
    
    - name: Checkout repository
      uses: actions/checkout@v2

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: ${{ matrix.language }}

    # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
    - name: Autobuild
      uses: github/codeql-action/autobuild@v1

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1

  linter:
    name: üîç Lint Code
    runs-on: ubuntu-latest
    needs: Build
    steps:
    
    - uses: actions/checkout@v3
    - name: Get branch name (merge)
      if: github.event_name != 'pull_request'
      shell: bash
      run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV

    - name: Get branch name (pull request)
      if: github.event_name == 'pull_request'
      shell: bash
      run: echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF} | tr / -)" >> $GITHUB_ENV

    - name: Print the branch name
      run: echo ${{ env.BRANCH_NAME }}

    - name: Run Super linter
      id: linter
      uses: github/super-linter@v4.9.6
      env:
        VALIDATE_ALL_CODEBASE: false
        VALIDATE_JAVA: true
        VALIDATE_JAVASCRIPT_ES: true
        VALIDATE_JAVASCRIPT_STANDARD: true        
        DEFAULT_BRANCH: ${{ env.BRANCH_NAME }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  
  app-center:
    name: ‚¨ÜÔ∏è Upload to App Center
    runs-on: ubuntu-latest
    needs: Build
    steps:

    - uses: actions/download-artifact@v3
      with:
        name: ToDo
    
    - run: ls -la
    - name: Upload ipa to App Center
      uses: wzieba/AppCenter-Github-Action@v1
      with:
        appName: ramesh.kumar-ecanarys.com/ToDo
        token: ${{secrets.APP_CENTER_TOKEN}}
        group: Beta-testers
        file: ${{GitHub.Workspace}}/ToDo.ipa
        notifyTesters: true
        debug: false
         
